# Multi-stage Pipeline with Deployment Slots Demo
# Stages: Build → UAT → Production Staging → Slot Swap

trigger:
- main

variables:
  buildConfiguration: 'Release'
  azureServiceConnection: 'azure-service-connection'
  uatWebAppName: 'tailspin-uat-webapp'
  prodWebAppName: 'tailspin-prod-webapp'
  resourceGroupName: 'rg-tailspin-demo'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      dotnetSdkVersion: '8.x'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetSdkVersion)'

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: 'Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: 'Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: 'Tailspin.SpaceGame.Web/Tailspin.SpaceGame.Web.csproj'
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: DeployUAT
  displayName: 'Deploy to UAT'
  dependsOn: Build
  jobs:
  - deployment: DeployUAT
    environment: 'UAT'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Deploy to UAT'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(uatWebAppName)'
              package: '$(Pipeline.Workspace)/drop/*.zip'

- stage: DeployProdStaging
  displayName: 'Deploy to Prod Staging Slot'
  dependsOn: DeployUAT
  jobs:
  - job: ManualValidationUAT
    displayName: 'Manual Validation - UAT Testing Complete'
    pool: server
    steps:
    - task: ManualValidation@0
      displayName: 'Approve UAT Testing Results'
      inputs:
        notifyUsers: 'venn.d.dela.pena@accenture.com'
        instructions: 'Please validate UAT deployment at: https://tailspin-uat-webapp.azurewebsites.net'
        onTimeout: 'reject'
  
  - deployment: DeployProdStaging
    dependsOn: ManualValidationUAT
    environment: 'Production-Staging'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Deploy to Staging Slot'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(prodWebAppName)'
              deployToSlotOrASE: true
              resourceGroupName: '$(resourceGroupName)'
              slotName: 'staging'
              package: '$(Pipeline.Workspace)/drop/*.zip'

- stage: SwapToProduction
  displayName: 'Swap to Production'
  dependsOn: DeployProdStaging
  jobs:
  - job: ManualValidationStaging
    displayName: 'Manual Validation - Staging Testing Complete'
    pool: server
    steps:
    - task: ManualValidation@0
      displayName: 'Approve Production Slot Swap'
      inputs:
        notifyUsers: 'venn.d.dela.pena@accenture.com'
        instructions: 'Please validate staging deployment at: https://tailspin-prod-webapp-staging.azurewebsites.net'
        onTimeout: 'reject'
  
  - deployment: SwapSlots
    dependsOn: ManualValidationStaging
    environment: 'Production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceManage@0
            displayName: 'Swap Staging to Production'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              action: 'Swap Slots'
              webAppName: '$(prodWebAppName)'
              resourceGroupName: '$(resourceGroupName)'
              sourceSlot: 'staging'